name: Build, Upload Sarif with Trivy Scan

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  TRIVY_VERSION: 0.64.1
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}

jobs:
  build_and_scan:
    name: Build, Scan and report
    runs-on: ubuntu-latest

    permissions:
      security-events: write
      contents: read
      actions: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          # Use the GitHub Container Registry
          # The registry is ghcr.io, and the username is the GitHub actor.
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

      - name: Install trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v${{ env.TRIVY_VERSION }}
          trivy --version

      - name: Generate Software Bill of Materials (SBOM)
        run: |
          trivy image \
            --format cyclonedx \
            --output sbom.json \
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

      - name: Scan SBOM and apply VEX
        run: |
          trivy sbom \
          --format json \
          --output trivy-results.json \
          --show-suppressed \
          --vex ./openvex.json \
          sbom.json
          echo "SBOM scan completed and results saved to trivy-results.json"

      - name: Debug PURL Mismatch
        if: always()
        run: |
          echo "---"
          echo "DEBUGGING PURL FOR Newtonsoft.Json:"
          echo "PURL from SBOM:"
          echo "---"
          jq '.Results[].Vulnerabilities[]? | select(.PkgName == "Newtonsoft.Json") | .PkgIdentifier' trivy-results.json
          echo "---"

      # - name: Create and display vulnerability table
      #   id: create_table
      #   run: |
      #     # 1. Create the base JSON array of vulnerabilities
      #     jq '[
      #       .Results[].Vulnerabilities[]? | select(.VulnerabilityID != null) |
      #       {
      #         package: .PkgName,
      #         cve: .VulnerabilityID,
      #         version: .InstalledVersion,
      #         severity: .Severity,
      #         status: (if .VexStatus and .VexStatus != "" then .VexStatus else "active" end)
      #       }
      #     ]' trivy-results.json > vulnerabilities-table.json

      #     echo "JSON table created: vulnerabilities-table.json ✅"

      #     # 2. Print a simple text table to the logs for quick viewing
      #     echo ""
      #     echo "--- Formatted Log Output ---"
      #     jq -r '
      #       (.[0] | keys_unsorted | (map(.) | @tsv)),
      #       (.[] | to_entries | (map(.value) | @tsv))
      #     ' vulnerabilities-table.json | column -t -s $'\t'

      #     # 3. Create a Markdown table and add it to the GitHub Job Summary
      #     {
      #       echo "### 🛡️ Trivy Vulnerability Report"
      #       echo ""
      #       jq -r '
      #         (.|"| Package | CVE | Version | Severity | Status |"),
      #         (.[] | "| \(.package) | \(.cve) | \(.version) | \(.severity) | \(.status) |")
      #       ' vulnerabilities-table.json
      #     } >> $GITHUB_STEP_SUMMARY

      #     echo "Markdown table added to Job Summary ✅"

      # - name: Filter suppressed vulnerabilities
      #   run: |
      #     jq 'del(.runs[].results[] | select(.suppressions != null))' trivy-results.sarif > trivy-filtered.sarif

      # - name: Upload Trivy scan results to GitHub Security tab
      #   if: always()
      #   uses: github/codeql-action/upload-sarif@v3
      #   with:
      #     sarif_file: "trivy-filtered.sarif"

      - name: Upload Scan Reports as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-reports
          path: |
            vulnerabilities-table.json
